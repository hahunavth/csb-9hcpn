{"version":3,"sources":["Store/Reducer/todoSlice.js","Store/index.js","Components/NavBar.jsx","Components/Todos.jsx","Components/TodoForm.jsx","App.jsx","index.js"],"names":["getTodo","createAsyncThunk","a","axios","get","res","data","addTodo","title","newTodo","id","nanoid","completed","todosSlice","createSlice","name","initialState","allTodos","reducers","addTodos","reducer","state","action","unshift","payload","prepare","removeTodos","filter","todo","markComplete","map","extraReducers","pending","console","log","fulfilled","todosSelector","actions","store","configureStore","todosReducer","NavBar","dispatch","useDispatch","todos","useSelector","useEffect","className","length","Todos","toggleIsComplete","handleDelete","type","checked","isComplete","onChange","bind","onClick","TodoForm","useState","setTitle","onSubmit","event","preventDefault","target","value","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.79640345.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk, nanoid } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const getTodo = createAsyncThunk(\"todos/todosFetched\", async () => {\r\n  const res = await axios.get(\r\n    \"https://jsonplaceholder.typicode.com/todos?_limit=5\"\r\n  );\r\n  return res.data;\r\n});\r\n\r\nexport const addTodo = createAsyncThunk(\"todos/todosAdded\", async (title) => {\r\n  const newTodo = {\r\n    id: nanoid(),\r\n    title: title,\r\n    completed: false\r\n  };\r\n  await axios.get(\"https://jsonplaceholder.typicode.com/todos\", newTodo);\r\n  return newTodo;\r\n});\r\n\r\nconst todosSlice = createSlice({\r\n  name: \"todos\",\r\n  initialState: {\r\n    allTodos: []\r\n  },\r\n  reducers: {\r\n    addTodos: {\r\n      reducer: (state, action) => {\r\n        state.allTodos.unshift(action.payload);\r\n      },\r\n      prepare: (title) => {\r\n        return {\r\n          payload: { id: nanoid(), title: title, completed: false }\r\n        };\r\n      }\r\n    },\r\n    removeTodos: (state, action) => {\r\n      const id = action.payload;\r\n      state.allTodos = state.allTodos.filter((todo) => {\r\n        return todo.id !== id;\r\n      });\r\n    },\r\n    markComplete: (state, action) => {\r\n      const id = action.payload;\r\n      state.allTodos = state.allTodos.map((todo) => {\r\n        if (todo.id === id) {\r\n          todo.completed = !todo.completed;\r\n        }\r\n        return todo;\r\n      });\r\n    }\r\n  },\r\n  extraReducers: {\r\n    // Get all todos\r\n    [getTodo.pending]: (state, action) => {\r\n      console.log(\"Fetching todos from backend ....\");\r\n    },\r\n    [getTodo.fulfilled]: (state, action) => {\r\n      console.log(\"Done\");\r\n      state.allTodos = action.payload;\r\n    },\r\n    [addTodo.pending]: (state, action) => {\r\n      console.log(\"try add todo\");\r\n    },\r\n    [addTodo.fulfilled]: (state, action) => {\r\n      const title = action.payload;\r\n      console.log(\"added\" + title);\r\n      state.allTodos.unshift(title);\r\n    }\r\n  }\r\n});\r\n\r\n//Export selector\r\nexport const todosSelector = (state) => state.allTodos;\r\n//Export action\r\nexport const { addTodos, removeTodos, markComplete } = todosSlice.actions;\r\n//Export reducer\r\nexport default todosSlice.reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport todosReducer from \"./Reducer/todoSlice\";\r\n\r\nconst store = configureStore({ reducer: todosReducer });\r\n\r\nexport default store;\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport { getTodo, todosSelector } from \"../Store/Reducer/todoSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst NavBar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const todos = useSelector(todosSelector);\r\n\r\n  useEffect(() => {\r\n    dispatch(getTodo());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"NavBar\">\r\n      <h1>Todo</h1>\r\n      <div className=\"NavMenu\">\r\n        <span>Home</span>\r\n        <span>About</span>\r\n        <span>Total todos: {todos.length}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  getTodo,\r\n  todosSelector,\r\n  removeTodos,\r\n  markComplete\r\n} from \"../Store/Reducer/todoSlice\";\r\n\r\nfunction Todos() {\r\n  const todos = useSelector(todosSelector);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const toggleIsComplete = (id) => {\r\n    dispatch(markComplete(id));\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    dispatch(removeTodos(id));\r\n  };\r\n\r\n  useEffect(() => {\r\n    // send request to jsonplaceholder\r\n    dispatch(getTodo());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"Todos-list\">\r\n        {todos.map((todo) => (\r\n          <li key={todo.id} className=\"Todos-item\">\r\n            <span>{todo.title}</span>\r\n            <input\r\n              key={todo.id}\r\n              type=\"checkbox\"\r\n              checked={todo.isComplete}\r\n              onChange={toggleIsComplete.bind(this, todo.id)}\r\n            />\r\n            <button onClick={handleDelete.bind(this, todo.id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todos;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addTodo } from \"../Store/Reducer/todoSlice\";\r\n\r\nfunction TodoForm() {\r\n  const [title, setTitle] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  function handleChange(event) {\r\n    event.preventDefault();\r\n    setTitle(event.target.value);\r\n  }\r\n\r\n  function handleAddTodo(event) {\r\n    event.preventDefault();\r\n\r\n    dispatch(addTodo(title));\r\n    setTitle(\"\");\r\n  }\r\n\r\n  return (\r\n    <form className=\"TodoForm\" onSubmit={handleAddTodo}>\r\n      <label>Add Todo: </label>\r\n      <input id=\"add-input\" type=\"text\" onChange={handleChange} value={title} />\r\n      <input id=\"add-btn\" type=\"submit\" />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm;\r\n","import \"./styles.scss\";\nimport NavBar from \"./Components/NavBar\";\nimport Todos from \"./Components/Todos\";\nimport TodoForm from \"./Components/TodoForm\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <TodoForm />\n      <Todos />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Store/index\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}